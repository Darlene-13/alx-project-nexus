# Generated by Django 5.2.4 on 2025-07-31 10:12

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InAppNotifications',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('recommendation', 'New Recommendation'), ('system', 'System Notification'), ('social', 'Social'), ('promotion', 'Promotion'), ('announcement', 'Annoucement')], default='system', max_length=50)),
                ('action_url', models.URLField(blank=True, help_text='URL to redirect when notification is clicked', null=True)),
                ('action_data', models.JSONField(blank=True, help_text='Additional data for notification actions', null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this notification should automatically be archived', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_app_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'In_App_Notification',
                'verbose_name_plural': 'In_App_Notifications',
                'db_table': 'in_app_notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='idx_in_app_user_created'), models.Index(fields=['user', 'is_read'], name='idx_in_app_user_read'), models.Index(fields=['expires_at'], name='idx_in_app_expires')],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('notification_type', models.CharField(help_text='Type of notification sent', max_length=50)),
                ('subject', models.CharField(help_text='Subject of the notification', max_length=255)),
                ('content', models.TextField(help_text='Content of the notification')),
                ('recipient', models.CharField(help_text='Email address or device token of the recipient', max_length=255)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('failed', 'Failed'), ('clicked', 'Clicked'), ('opened', 'Opened'), ('delivered', 'Delivered'), ('scheduled', 'Scheduled')], default='sent', help_text='Status of the notification', max_length=50)),
                ('external_id', models.CharField(help_text='Unique identifier for the notification', max_length=255, null=True, unique=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the notification was sent')),
                ('delivered_at', models.DateTimeField(blank=True, help_text='Timestamp when the notification was delivered', null=True)),
                ('opened_at', models.DateTimeField(blank=True, help_text='Timestamp when the notification was opened', null=True)),
                ('clicked_at', models.DateTimeField(blank=True, help_text='Timestamp when the notification was clicked', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the log entry was created')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notification_logs',
                'indexes': [models.Index(fields=['user', 'notification_type'], name='idx_notif_log_user_type'), models.Index(fields=['status'], name='idx_notif_log_status'), models.Index(fields=['notification_type', 'sent_at'], name='idx_notif_log_type_sent'), models.Index(fields=['created_at'], name='idx_notif_log_created_at')],
            },
        ),
        migrations.CreateModel(
            name='NotificationsPreferences',
            fields=[
                ('in_app_sysem_updates', models.BooleanField(default=False, help_text='Receive in-app notifications for system updates')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('weekly_digest', models.BooleanField(default=False, help_text='Receive a weekly digest of notifications')),
                ('recommendation_alerts', models.BooleanField(default=False, help_text='Receive alerts for new movie recommendations')),
                ('trending_alerts', models.BooleanField(default=False, help_text='Receive alerts for trending movies')),
                ('push_recommendations', models.BooleanField(default=False, help_text='Receive push notifications for new recommendations')),
                ('push_trending', models.BooleanField(default=False, help_text='Receive push notifications for trending movies')),
                ('in_app_recommendations', models.BooleanField(default=False, help_text='Receive in-app notifications for new recommendations')),
                ('in_app_system_updates', models.BooleanField(default=False, help_text='Receive in-app notifications for system updates', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('digest_day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=0, help_text='Day of the week to receive the weekly digest')),
                ('digest_time', models.TimeField(default=django.utils.timezone.now, help_text='Time of day to receive the weekly digest')),
                ('timezone', models.CharField(default='UTC', help_text="User's timezone for scheduling notifications", max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the preferences were created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the preferences were last updated')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'db_table': 'notifications_preferences',
                'indexes': [models.Index(fields=['user'], name='idx_notifprefs_user'), models.Index(fields=['digest_day', 'digest_time'], name='idx_notifprefs_digest')],
            },
        ),
    ]
