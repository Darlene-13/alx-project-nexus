version: '3.8'

services:
  backend:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8001:8000"
    environment: 
      - DEBUG=1  #Change this when it comes to deployment and Production.
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD}
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    env_file:
      - .env
    networks:
      - movie_recommendation_network
  postgres:
    image: postgres:latest
    container_name: movie_recommendation_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
    ports:
        - "5434:5432"
    volumes: 
        - postgres_data:/var/lib/postgresql/data
    networks:
      - movie_recommendation_network
  redis:
    image: redis:latest
    container_name: movie_recommendation_redis
    ports: 
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - movie_recommendation_network
  celery:
    build: .
    command: celery -A movie_recommendation_backend worker -l info
    depends_on:
      - backend
      - postgres
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes: 
      - .:/app
    networks:
      - movie_recommendation_network
  celery-beat:
    build: .
    command: celery -A movie_recommendation_backend beat -l info
    depends_on:
      - backend
      - redis
      - postgres
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes: 
      - .:/app
    networks:
      - movie_recommendation_network

volumes:
  postgres_data: 
  redis_data:
    driver: local
networks:
  movie_recommendation_network:
    driver: bridge 

